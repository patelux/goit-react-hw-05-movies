{"version":3,"file":"static/js/884.a46df005.chunk.js","mappings":"iRASe,SAASA,IAAgB,IAAD,IACrC,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAU,iBAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAUG,aAAb,aAAG,EAAiBC,YAApB,QAA4B,IAEpCC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACRV,GAAa,IACbW,EAAAA,EAAAA,IAAeH,GACZI,KAAKd,GACLe,OAAM,SAAAZ,GACLC,EAASD,EAAMa,QAChB,IACAC,SAAQ,WACPf,GAAa,EACd,GACJ,GAAE,CAACQ,KAGF,UAAC,KAAD,YACE,UAAC,KAAD,WACGT,IAAa,SAAC,IAAD,KAEZ,gBACEiB,MAAO,CACLC,aAAc,OACdC,MAAO,OACPC,cAAe,SACfC,eAAgB,YAChBC,YAAa,QANjB,UASE,SAAC,KAAD,CAASC,GAAIjB,EAAb,UACE,SAAC,KAAD,CAAmBkB,KAAK,SAAxB,0CAMJ,SAAC,IAAD,CAEEC,MAAO3B,EAAQ2B,MACfC,OAAQ5B,EAAQ6B,YAChBC,KAAM9B,EAAQ+B,aACdC,UAAWhC,EAAQiC,aACnBC,SAAUlC,EAAQkC,SAClBC,OAAQnC,EAAQmC,QANXnC,EAAQoC,IAShBC,QAAQjC,KAAU,mCAAWA,EAAMa,eAEtC,UAAC,KAAD,YACE,SAAC,KAAD,sCAEA,gBAAKqB,MAAM,WAAX,UACA,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAS7B,MAAOH,EAASG,MAAOgB,GAAE,kBAAad,EAAb,SAAlC,qBAIF,SAAC,KAAD,WACE,SAAC,KAAD,CAASF,MAAOH,EAASG,MAAOgB,GAAE,kBAAad,EAAb,YAAlC,gCAQN,SAAC,KAAD,WACM,SAAC,KAAD,CAASc,GAAG,IAAZ,UACJ,SAAC,KAAD,gCAGJ,SAAC,KAAD,MAGH,C","sources":["pages/MovieDetails.jsx"],"sourcesContent":["import {  Section,  Container,  BtnBackToPrevious,  GeneralsectionTitle,  GridItem,  CastGrid,} from 'components';\nimport {MovieInfo} from '../components/MovieInfo/MovieInfo';\nimport Loader from '../components/Loader/Loader';\n\nimport { useEffect, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { fetchMovieById } from 'service/api';\n\nexport default function MovieDetails() {\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  const goBackLink = location?.state?.from ?? '/';\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieById(movieId)\n      .then(setDetails)\n      .catch(error => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <Section>\n      <Container>\n        {isLoading && <Loader />}\n        \n          <div\n            style={{\n              marginBottom: '60px',\n              color: '#000',\n              letterSpacing: '0.06em',\n              textDecoration: 'underline',\n              borderColor: 'gray',\n            }}\n          >\n            <NavLink to={goBackLink}>\n              <BtnBackToPrevious type=\"button\">\n                ‚Üê Back to previous\n              </BtnBackToPrevious>\n            </NavLink>\n          </div>\n\n          <MovieInfo\n            key={details.id}\n            title={details.title}\n            poster={details.poster_path}\n            date={details.release_date}\n            userScore={details.vote_average}\n            overview={details.overview}\n            genres={details.genres}\n          />\n        \n        {Boolean(error) && <p>Error: {error.message}</p>}\n      </Container>\n      <Container>\n        <GeneralsectionTitle>Additional information</GeneralsectionTitle>\n\n        <div class='addition'>\n        <CastGrid>\n          <GridItem>\n            <NavLink state={location.state} to={`/movies/${movieId}/cast`}>\n              Cast\n            </NavLink>\n          </GridItem>\n          <GridItem>\n            <NavLink state={location.state} to={`/movies/${movieId}/reviews`}>\n              Reviews\n            </NavLink>\n          </GridItem>\n        </CastGrid>\n\n      </div>            \n      </Container>\n      <Container>\n            <NavLink to=\"/\">\n        <BtnBackToPrevious>Back to home</BtnBackToPrevious>\n        </NavLink>\n      </Container>\n    <Outlet />\n    </Section>\n  );\n};\n\n"],"names":["MovieDetails","useState","details","setDetails","isLoading","setIsLoading","error","setError","location","useLocation","goBackLink","state","from","movieId","useParams","useEffect","fetchMovieById","then","catch","message","finally","style","marginBottom","color","letterSpacing","textDecoration","borderColor","to","type","title","poster","poster_path","date","release_date","userScore","vote_average","overview","genres","id","Boolean","class"],"sourceRoot":""}